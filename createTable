#!/bin/bash

tableName=''
while  true ; do
    read -rp "Enter Table Name you want to create or type 'exit' to exit: " tableName
    if [[ "$tableName" =~ ^[Bb][aA][cC][Kk]$ ]]; then
        exit
    elif [[ "$tableName" =~ ^[eE][xX][iI][tT]$ ]]; then
        exit
    elif [ -z $tableName ]; then
        echo "Table name can't be empty"
        continue
    elif ! [[ "$tableName" =~ ^[a-zA-Z][A-Za-z_0-9]*$ ]]; then
        echo "Invalid table name it must start with a letter and only contains letter numbers and underscores"
    elif [[ -f "./$tableName" || -f "./$tableName.metadata" ]]; then
        echo "Table '$tableName' Already exists"
    else
        #touch  $tableName  && echo "table '$tableName' created" || echo "Failed to create table '%tableName' \n"
        break
    fi
done

while [ true ]; do
    read -rp "enter number of columns in your table type exit to abort :" col
    if [[ $col =~ ^[Ee][Xx][iI][tT]$ || $col =~ ^[bB][aA][cC][kK]$ ]]; then
        rm -f $tableName && echo "creation aborted"
        exit
    elif ! [[ $col =~ ^[0-9]*$ ]]; then
        echo "that's not a number"
        continue
    elif (( $col > 64 || $col <= 0 )); then
        echo "columns must be an integer between 1 And 64"
        continue
    else
        break
    fi
done

echo "enter your columns labels note 1st is the primary key  : "
for (( i=0 ; i < $col ; i++ )); do
    read -p "enter col number $((i+1)) name :" colabel
    if [ -z "$colabel" ]; then
        echo "columns label can't be empty"
        ((i--))
        continue
    elif ! [[ "$colabel" =~ ^[a-zA-Z][A-Za-z_0-9]*$ ]]; then
        echo "Invalid column name it must start with a letter and only contains letter numbers and underscores"
        ((i--))
        continue
    elif [[ "${line1[*]}" =~ ${colabel} ]] ; then
        echo "'$colabel' already exists "
        ((i--))
        continue
    else
        line1[${i}]="$colabel"
        read -p   "type of '$colabel' string or integer (s/i) " coltype
        case $coltype in
            "s"|"S" ) line2[${i}]="string" ;;
            "i"|"I" ) line2[${i}]="integer" ;;
            * ) echo "invalid type "; ((i--)) ; continue ;;
        esac

        if (( i == 0 )); then
            line3[${i}]="NOTNULL"
        else
            read -p   "'$colabel' can be null (y/n) ? " coltype
            case $coltype in
                "y"|"Y" ) line3[${i}]="NULL" ;;
                "n"|"N" ) line3[${i}]="NOTNULL" ;;
                * ) echo "invalid type "; ((i--)) ; continue ;;
            esac
        fi
    fi
done

touch  $tableName
echo "${line1[@]}" > ./$tableName.metadata
echo "${line2[@]}" >> ./$tableName.metadata
echo "${line3[@]}" >> ./$tableName.metadata
echo "Table '$tableName' created successfully."